#ifndef _NS_CONST_H_
#define _NS_CONST_H_

#include "ns_const_advanced.h"

// Offsets (used in utilfunctions.cpp)

#define		OFFSET_WIN_RESOURCES		1820	//454 * 4
#define		OFFSET_LIN_RESOURCES		1840	//459 * 4

#define		OFFSET_WIN_WEAPDMG		416	//102 * 4
#define		OFFSET_LIN_WEAPDMG		432	//106 * 4

#define		OFFSET_WIN_WEAPRANGE		412	//101 * 4
#define		OFFSET_LIN_WEAPRANGE		428	//105 * 4

#define		OFFSET_WIN_WEAPCLIP		364	//91 * 4
#define		OFFSET_LIN_WEAPCLIP		380	//95 * 4

#define		OFFSET_WIN_HIVE_TRAIT		512	//488	//122 * 4
#define		OFFSET_LIN_HIVE_TRAIT		528	//504	//126 * 4

#define		OFFSET_WIN_SCORE		6644	//6588	//1647 * 4
#define		OFFSET_LIN_SCORE		6744	//6608	//1652 * 4

#define		OFFSET_WIN_EXP			6576	//6512	//1628 * 4
#define		OFFSET_LIN_EXP			6644	//6532	//1633 * 4

#define		OFFSET_WIN_POINTS		6584	//6520	//1630 * 4
#define		OFFSET_LIN_POINTS		6652	//6540	//1635 * 4

#define		OFFSET_WIN_AMMO_LMG		1116	//279 * 4
#define		OFFSET_LIN_AMMO_LMG		1136	//284 * 4

#define		OFFSET_WIN_AMMO_PISTOL		1120	//280 * 4
#define		OFFSET_LIN_AMMO_PISTOL		1140	//285 * 4

#define		OFFSET_WIN_AMMO_SHOTGUN		1124	//281 * 4
#define		OFFSET_LIN_AMMO_SHOTGUN		1144	//286 * 4

#define		OFFSET_WIN_AMMO_HMG		1128	//282 * 4
#define		OFFSET_LIN_AMMO_HMG		1148	//287 * 4

#define		OFFSET_WIN_AMMO_GL		1132	//283 * 4
#define		OFFSET_LIN_AMMO_GL		1152	//288 * 4

#define		OFFSET_WIN_AMMO_HG		1136	//284 * 4
#define		OFFSET_LIN_AMMO_HG		1156	//289 * 4

#define		OFFSET_WIN_DEATHS		1380	//345 * 4
#define		OFFSET_LIN_DEATHS		1400	//350 * 4

#define		OFFSET_WIN_STRUCTOWNER		324	//81 * 4
#define		OFFSET_LIN_STRUCTOWNER		340	//85 * 4

#define		OFFSET_WIN_HIVEABILITY		6276	//6248	//1562 * 4
#define		OFFSET_LIN_HIVEABILITY		6344	//6268	//1567 * 4

enum
{
	NS_MASK_NONE = 0,
	NS_MASK_SIGHTED = 1,
	NS_MASK_DETECTED = 2,
	NS_MASK_BUILDABLE = 4,
	NS_MASK_BASEBUILD0 = 8,			// Base build slot #0
	NS_MASK_WEAPONS1 = 8,			// Marine weapons 1
	NS_MASK_CARAPACE = 8,			// Alien carapace
	NS_MASK_WEAPONS2 = 16,			// Marines weapons 2
	NS_MASK_REGENERATION = 16,			// Alien regeneration
	NS_MASK_BASEBUILD1 = 16,			// Base build slot #1
	NS_MASK_WEAPONS3 = 32,			// Marine weapons 3
	NS_MASK_REDEMPTION = 32,			// Alien redemption
	NS_MASK_BASEBUILD2 = 32,			// Base build slot #2
	NS_MASK_ARMOR1 = 64,			// Marine armor 1
	NS_MASK_CELERITY = 64,			// Alien celerity
	NS_MASK_BASEBUILD3 = 64,			// Base build slot #3
	NS_MASK_ARMOR2 = 128,			// Marine armor 2
	NS_MASK_ADRENALINE = 128,			// Alien adrenaline
	NS_MASK_BASEBUILD4 = 128,			// Base build slot #4
	NS_MASK_ARMOR3 = 256,			// Marine armor 3
	NS_MASK_SILENCE = 256,			// Alien silence
	NS_MASK_BASEBUILD5 = 256,			// Base build slot #5
	NS_MASK_JETPACK = 512,			// Marine jetpacks
	NS_MASK_CLOAKING = 512,			// Alien cloaking
	NS_MASK_BASEBUILD6 = 512,			// Base build slot #6
	NS_MASK_FOCUS = 1024,			// Alien focus
	NS_MASK_MOTION = 1024,			// Marine motion tracking
	NS_MASK_BASEBUILD7 = 1024,			// Base build slot #7
	NS_MASK_SCENTOFFEAR = 2048,		// Alien scent of fear
	NS_MASK_DEFENSE2 = 4096,			// Defense level 2
	NS_MASK_DEFENSE3 = 8192,			// Defense level 3
	NS_MASK_ELECTRICITY = 8192,		// Electricy
	NS_MASK_MOVEMENT2 = 16384,			// Movement level 2,
	NS_MASK_MOVEMENT3 = 32768,			// Movement level 3
	NS_MASK_HEAVYARMOR = 32768,		// Marine heavy armor
	NS_MASK_SENSORY2 = 65536,			// Sensory level 2
	NS_MASK_SENSORY3 = 131072,			// Sensory level 3
	NS_MASK_ALIEN_MOVEMENT = 262144,		// Onos is charging
	NS_MASK_WALLSTICKING = 524288,		// Flag for wall-sticking
	NS_MASK_PRIMALSCREAM = 1048576,		// Alien is in range of active primal scream
	NS_MASK_UMBRA = 2097152,			// In umbra
	NS_MASK_DIGESTING = 4194304,		// When set on a visible player, player is digesting.  When set on invisible player, player is being digested
	NS_MASK_RECYCLING = 8388608,		// Building is recycling
	NS_MASK_TOPDOWN = 16777216,		// Commander view
	NS_MASK_PLAYER_STUNNED = 33554432,		// Player has been stunned by stomp
	NS_MASK_ENSNARED = 67108864,		// Webbed
	NS_MASK_ALIEN_EMBRYO = 134217728,		// Gestating
	NS_MASK_SELECTABLE = 268435456,		// ???
	NS_MASK_PARASITED = 536870912,		// Parasite flag
	NS_MASK_SENSORY_NEARBY = 1073741824	// Sensory chamber in range
};

enum
{
	NS_WEAPON_NONE = 0,
	NS_WEAPON_CLAWS,
	NS_WEAPON_SPIT,
	NS_WEAPON_SPORES,
	NS_WEAPON_SPIKE,
	NS_WEAPON_BITE,
	NS_WEAPON_BITE2,
	NS_WEAPON_SWIPE,
	NS_WEAPON_WEBSPINNER,
	NS_WEAPON_METABOLIZE,
	NS_WEAPON_PARASITE,
	NS_WEAPON_BLINK,
	NS_WEAPON_DIVINEWIND,
	NS_WEAPON_KNIFE,
	NS_WEAPON_PISTOL,
	NS_WEAPON_LMG,
	NS_WEAPON_SHOTGUN,
	NS_WEAPON_HMG,
	NS_WEAPON_WELDER,
	NS_WEAPON_MINE,
	NS_WEAPON_GRENADE_GUN,
	NS_WEAPON_LEAP,
	NS_WEAPON_CHARGE,
	NS_WEAPON_UMBRA,
	NS_WEAPON_PRIMALSCREAM,
	NS_WEAPON_BILEBOMB,
	NS_WEAPON_ACIDROCKET,
	NS_WEAPON_HEALINGSPRAY,
	NS_WEAPON_GRENADE,
	NS_WEAPON_STOMP,
	NS_WEAPON_DEVOUR,
	NS_WEAPON_MAX
};

enum classes
{
	NS_CLASS_UNKNOWN = 0,
	NS_CLASS_SKULK,
	NS_CLASS_GORGE,
	NS_CLASS_LERK,
	NS_CLASS_FADE,
	NS_CLASS_ONOS,
	NS_CLASS_MARINE,
	NS_CLASS_JETPACK,
	NS_CLASS_HEAVY,
	NS_CLASS_COMMANDER,
	NS_CLASS_GESTATE,
	NS_CLASS_DEAD,
	NS_CLASS_NOTEAM
};

typedef enum
{
	NS_AVH_USER3_NONE = 0,
	NS_AVH_USER3_MARINE_PLAYER,
	NS_AVH_USER3_COMMANDER_PLAYER,
	NS_AVH_USER3_ALIEN_PLAYER1,
	NS_AVH_USER3_ALIEN_PLAYER2,
	NS_AVH_USER3_ALIEN_PLAYER3,
	NS_AVH_USER3_ALIEN_PLAYER4,
	NS_AVH_USER3_ALIEN_PLAYER5,
	NS_AVH_USER3_ALIEN_EMBRYO,
	NS_AVH_USER3_SPAWN_TEAMONE,
	NS_AVH_USER3_SPAWN_TEAMTWO,
	NS_AVH_USER3_PARTICLE_ON,				// only valid for AvHParticleEntity: entindex as int in fuser1, template index stored in fuser2
	NS_AVH_USER3_PARTICLE_OFF,				// only valid for AvHParticleEntity: particle system handle in fuser1
	NS_AVH_USER3_WELD,					// float progress (0 - 100) stored in fuser1
	NS_AVH_USER3_ALPHA,				// fuser1 indicates how much alpha this entity toggles to in commander mode, fuser2 for players
	NS_AVH_USER3_MARINEITEM,				// Something a friendly marine can pick up
	NS_AVH_USER3_WAYPOINT,
	NS_AVH_USER3_HIVE,
	NS_AVH_USER3_NOBUILD,
	NS_AVH_USER3_USEABLE,
	NS_AVH_USER3_AUDIO_ON,
	NS_AVH_USER3_AUDIO_OFF,
	NS_AVH_USER3_FUNC_RESOURCE,
	NS_AVH_USER3_COMMANDER_STATION,
	NS_AVH_USER3_TURRET_FACTORY,
	NS_AVH_USER3_ARMORY,
	NS_AVH_USER3_ADVANCED_ARMORY,
	NS_AVH_USER3_ARMSLAB,
	NS_AVH_USER3_PROTOTYPE_LAB,
	NS_AVH_USER3_OBSERVATORY,
	NS_AVH_USER3_CHEMLAB,
	NS_AVH_USER3_MEDLAB,
	NS_AVH_USER3_NUKEPLANT,
	NS_AVH_USER3_TURRET,
	NS_AVH_USER3_SIEGETURRET,
	NS_AVH_USER3_RESTOWER,
	NS_AVH_USER3_PLACEHOLDER,
	NS_AVH_USER3_INFANTRYPORTAL,
	NS_AVH_USER3_NUKE,
	NS_AVH_USER3_BREAKABLE,
	NS_AVH_USER3_UMBRA,
	NS_AVH_USER3_PHASEGATE,
	NS_AVH_USER3_DEFENSE_CHAMBER,
	NS_AVH_USER3_MOVEMENT_CHAMBER,
	NS_AVH_USER3_OFFENSE_CHAMBER,
	NS_AVH_USER3_SENSORY_CHAMBER,
	NS_AVH_USER3_ALIENRESTOWER,
	NS_AVH_USER3_HEAVY,
	NS_AVH_USER3_JETPACK,
	NS_AVH_USER3_ADVANCED_TURRET_FACTORY,
	NS_AVH_USER3_SPAWN_READYROOM,
	NS_AVH_USER3_CLIENT_COMMAND,
	NS_AVH_USER3_FUNC_ILLUSIONARY,
	NS_AVH_USER3_MENU_BUILD,
	NS_AVH_USER3_MENU_BUILD_ADVANCED,
	NS_AVH_USER3_MENU_ASSIST,
	NS_AVH_USER3_MENU_EQUIP,
	NS_AVH_USER3_MINE,
	NS_AVH_USER3_MAX
} EL3_AvHUser3;

enum
{
	NS_PLAYERCLASS_NONE = 0,
	NS_PLAYERCLASS_ALIVE_MARINE,
	NS_PLAYERCLASS_ALIVE_JETPACK,
	NS_PLAYERCLASS_ALIVE_HEAVY_MARINE,
	NS_PLAYERCLASS_ALIVE_LEVEL1,
	NS_PLAYERCLASS_ALIVE_LEVEL2,
	NS_PLAYERCLASS_ALIVE_LEVEL3,
	NS_PLAYERCLASS_ALIVE_LEVEL4,
	NS_PLAYERCLASS_ALIVE_LEVEL5,
	NS_PLAYERCLASS_ALIVE_DIGESTING,
	NS_PLAYERCLASS_ALIVE_GESTATING,
	NS_PLAYERCLASS_DEAD_MARINE,
	NS_PLAYERCLASS_DEAD_ALIEN,
	NS_PLAYERCLASS_COMMANDER,
	NS_PLAYERCLASS_REINFORCING,
	NS_PLAYERCLASS_SPECTATOR,
	NS_PLAYERCLASS_READY,
};

#endif
